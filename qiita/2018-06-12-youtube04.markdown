## 前段として

最近、雨季に入ってしまって

テンションが下がり気味です。

やっぱり雨の日はThe BeatlesのMaxwell's Silver Hammerですよね

...

ブログの記事ネタが尽きるのではという不安より

早いタイミングで前段が無くなりそうですね☆

では昨日の続きやります。

## youtubeAPI 応用編① -未想定の操作に対処する-

前回のコードだとユーザーが操作した時に耐えられていないです。

というかバグだらけだと部下からクレームをいただきました。

「だから操作しちゃいけないんだってば！」と私

ありがto！

[サンプルはこちら](http://nekokke.tech/sample/youtube/03/index.html "　")

### 調査

まずは他のステータスも含めて対応しましょう。

と、その前に6秒後に自動停止という処理が今回の趣旨と違うのと

ややこいので機能的に削除しました。

前回は

onReady（動画の準備ができた時）と

onStateChange（動画のステータスが変更された時）の停止しか対応していませんでした。

もう一度onStateChange内部にコンソールを仕込みましょう。

```js

console.log(event.target.customOpt.index,event.data);
```

これで色々と見てみると

ユーザーの操作に対しては

```
- 再生されている動画を停止したら
	2(停止) → -1(未開始) → 3(バッファリング中)
		キューに登録された動画は1(再生中)→3(バッファリング中)→1(再生中)

- 停止されている動画を再生したら
	-1(未開始) → 3(バッファリング中) → 1(再生中)
		キューに登録された動画は止まらない笑
```

でした。

前回の状態もまとめてみたいと思います。

そこで判明したのですが

こちらで明示的に停止するのと

自動的に終了するのとはステータスの変化が違うみたいです。

```
[ユーザー操作]
1.再生されている動画を停止したら
	2(停止) → -1(未開始) → 3(バッファリング中)
		キューに登録された動画は1(再生中)→3(バッファリング中)→1(再生中)

2.停止されている動画を再生したら
	-1(未開始) → 3(バッファリング中) → 1(再生中)
		キューに登録された動画は止まらない笑

[自動]
3.再生に関しては、-1(未開始) → 3(バッファリング中) → 1(再生中)

4.停止に関しては、0(終了)

[私の操作]
5.6秒後の明示的な停止に関しては、2(停止) → -1(未開始) → 5(頭出し済み)
```

今回、6秒後の停止に関しては機能的に削除したので

5番目は除くとして4つの操作に対して対応していきます。

### ■3.再生に関して

まずは必ず再生されたときにはthis.isPlayNumを更新しましょう。

```js

onPlayerStateChange : function(event){
	if(event.data === YT.PlayerState.PLAYING){
		this.isPlayNum = event.target.customOpt.index;
	}
```

再生に関しては他の処理はいらないでしょう。

### ■4.停止に関して、2.再生されている動画の停止

先程のコンソールをみると自動再生時の動画の終了に関しては0(終了)で取りましょう。

その上で、各処理を共通化して、適切な処理わけをしましょう。

[続きはこちら…](http://nekokke.tech/youtube04/#-)