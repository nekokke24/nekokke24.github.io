## 前段

最近ではflexが出てきたので

あまり使われていない印象のfloat+cleafixですが「回り込み」を使いたい時などまだ使いようがあるので

floatをした際のclearfixがどのような仕組みなのか解説していきます。

レガシーなブラウザ対応で色々と着色されがちですが最小単位でいくと下記のコードになるかと思います。

```css

.clearfix:after {
	content: "";
	display: block;
	clear: both;
}
```

上記のコードはモダンブラウザ、正確には:before,:afterが使用できるブラウザの場合です。

つまりIE7などは対象外となりますが、基本的には上記のコードがベースになります。

1行1行解説して行く前に、何故それが必要か説明します。

## まず何故floatをクリアする必要があるのか？

通常、floatした場合は要素が浮いてしまいます。

画面のz軸に透明のフィルターが重なっていると考えてください。一番下から

```
0.position:static,float:none(初期値)
v
1.position:static,float:left or right(float使用時)
v
2.position:absolute or fixed(absolute or fixed使用時)
→absolute及びfixedを使用した場合はfloatの使用に問わずこの状態になる。
→初期値z-index:0
v
2x.z-indexによる重なり順
```

なので使用すると要素が浮きっぱなしになってしまいます。

通常は地に足がついています（0階層）がfloatを使用すると半浮遊（1階層）になってしまうので

階層が違うと他階層の要素を正しく認識できないと考えてください。

absolute or fixedの場合は完全浮遊（2階層）するため、クリアはできません。(2階層は他階層との干渉は無理)

ですが1階層<->0階層は1階層の要素をclearしてあげることで

0階層が1階層を正常に認識することができます。

これがclearです。

[続きはこちら…](http://nekokke.tech/clearfix/#-)
