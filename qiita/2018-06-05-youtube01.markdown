## 前段として

未だ、indexされず...

申請したんですがね...

...

この問題を打破するために

P（プロデューサー）に相談して

qiitaとの連携を進めていきます。

今後は記事を書いたら、こちらでも展開しようと思います。

では、タイトルどおり、動画周りを何部かに渡り載せていきます。

最近ではよくありますね。海外のサイトとかだと

KVもスライドで横に動くとかより

静止画か動画が多いみたいです。

そこで動画で困らないためにyoutube APIを用いた

動画の展開のあれこれをやります。

ただ、前回の記事で反省したのですが

丁寧に説明していきたいので

1つの記事だと収まらないと思い

何部かに渡り展開していきます。

## youtubeAPI 基本編① -読み込み-

今回使用するのはIFrame Player APIというやつです。

今回は基本編なのでgoogleが提供しているサンプルをベースに説明していきます。

まず、iframeが展開される箱を作りましょう。

```html

<div id="player"></div>
```
ここでは**idのみ**です。

なのでクラス指定はダメです。

あと、このidのついた**div自体が全て置き換わってしまうので**

**装飾などありましたらこのdivの外に展開しましょう。**

次にapi読み込み用のscriptタグをぶち込みます。

```js
var tag = document.createElement('script');

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
```
1.jsでscriptタグを作成して

2.apiのurlを設定

3.既存のscriptタグを取得

4.既存のスクリプトタグの前に作成したscriptタグを挿入です。

ここまでだとこんな感じです。

```html

<!DOCTYPE html>
<html>
<body>
<div id="player"></div>

<script>
	var tag = document.createElement('script');

	tag.src = "https://www.youtube.com/iframe_api";
	var firstScriptTag = document.getElementsByTagName('script')[0];
	firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
</script>
</body>
</html>
```

でもここまでってscriptタグ生成してAPI読み込みしているだけなので

これでも良い

```html
<!DOCTYPE html>
<html>
<body>
<div id="player"></div>

<script src="https://www.youtube.com/iframe_api"></script>
<script>
	// 残りのscriptを記述
</script>
</body>
</html>
```

## youtubeAPI 基本編① -実行-

```js
var player;
function onYouTubeIframeAPIReady() {
	player = new YT.Player('player', {
		height: '360',
		width: '640',
		videoId: 'M7lc1UVf-VE',
		events: {
			'onReady': onPlayerReady,
			'onStateChange': onPlayerStateChange
		}
	});
}
```

次これですね

YT.Playerというコンストラクタをnewしています。

おそらく先程読み込んだiframe_apiに入っているのでしょう。

ここで注意なのが**onYouTubeIframeAPIReadyは実行できる状態になると自動的に発火するということ**

つまり、逆を言えば

実行できる状態にならない限り発火しない

こいつが発火する前にplayerに色々と指示を与えてもundefinedですね。

[続きはこちら…](http://nekokke.tech/youtube/#-)