---
layout: post
title: 気持ちのよいアニメーションを けして枯れない涙を
date: 2018-05-31 00:00:00 +0900
description: 気持ちのよいアニメーションについて
img: thumbnail-workflow.jpg
tags: [Css] 
---

## 前段として

最近、このブログも記事が溜まってきたので

インデックスされたいのですが

先生からは依然として無視されてます。

誰もいないな...

快適なスピードでお送りします。

## 気持ちのよいアニメーションとは

まず極端に表現すると、人が気持ちの良いアニメーションとは

人が気持ち悪くないと思うアニメーションになります。

ではまず、人が気持ち悪いと思うアニメーションとは

どういうことでしょう？

それは普段、我々が感じていない動きだったり変化です。

### 人が気持ちわるいと感じること

例えば、映像の話ですと演出の一つとしてズームさせるという表現があります。

これは、シーンにおいて注目してほしい時などに使います。

なぜズームなのかというと

人間の目に、「視界を拡大縮小する機能」がないからです。

そこで見ている人は、違和感を覚えます。

その違和感を利用して注意を引き付けているということです。

ですがこれは映像に限ったことではありません。

### 不快感や違和感

例えば、音の世界では

踏切音や地震速報などわざと不協和音を出して

注意を引かせるなどあります。

つまり、人は普段ふれている中で

存在しないものにふれると不快感や違和感を感じるということです。

それではアニメーションはどうでしょう？

## イージングについて（単体アニメーション）

### 物が動くときの自然法則 

あなたが机の上にある卵を別の机に動かそうとした時

どのような現象が起きているかというと

基本的には

```
0.停止（何もしていない状態）

1.加速（物を動かす）

2.移動（目的地に向け一定加速で移動）

3.減速（近づいたところで減速）

4.停止（目的地に完全に速度0で停止）
```

例えば、車を時速60kmで走りたい時を想像してください。

急に時速60kmになりますか？

そしてやっと時速60kmになった時

急にブレーキを押したらどうなりますか？

すぐに止まりますか？

物体は減速しないと停止できないのですよね

これは慣性の法則というやつです。

### 慣性の法則

ルールは以下となります。

```
a.静止している物体はいつまでも静止し続ける。

b.運動している物体はいつまでも等速直線運動を続ける。
```

bは地球にいると、摩擦や空気抵抗や重力など様々な力が外部からかかるため

起こりえないですが、それが全く無い宇宙空間であれば

物体はいつまでも等速直線運動を続けます。

なので大切な人とケンカして手でも出たもんなら

二人は二度と会えないですね。

物理的に永遠に飛んでいってしまうからです。

### 自然界にlinearは存在しない

0と4を始点と終点と考えると

1,2,3の変化があることになります。

つまり、linearという１次関数は速度の変化として自然界に存在しないということです。

正確に表現するのであれば3次関数

これはease-in-outと言われているやつですね

一般的には車の加速と減速に似ていると言われています。

ですが、これは人が不自然と思わない範囲内で省略可能とも言われています。

### ease-out

もし、1.加速から2.移動の変化を簡略するのであれば

ease-outになります。

これは　移動→減速、減速→停止が表現されているます。

最後は減速するので自然に見えます。

先程言った物体は急には止まれないという

慣性の法則に準じているからです。

### ease-in

もし、3.減速から4.停止の変化を簡略するのであれば

ease-inになります。

これは　加速→移動、移動→停止が表現されているます。

重い石が落下するときの動きに似ていると言われます。

ゆっくりと動き始め、最後は勢いよく地面にぶつかって止まりますが

現実の世界では、動いている物は突然止まることはないので

少し不自然に見えます。

### 良しと悪し

どちらがより不自然に見えないかと言うと

3.減速から4.停止を表現したほうが

自然にみえます。

人間は加速から移動より、減速から停止のほうがより神経質になっているということですかね。

どちらにせよ両方省略してしまうlinearは

かなり不自然に感じるということです。

最低でも2次関数はないと不自然な動きになるということを覚えて起きましょう。

なので無難なところではease-out、ease-in-outですね

そこでの変化がイメージと違う場合はease-inや他のイージングなど

試してみても良いかもしれません。

「linearは無いわー」とだけ覚えていてください。

## タイムラインについて（複数アニメーション）

### ぐちゃぐちゃにならないために？

状況によっては

要素を同時に複数動かすこともあるでしょう

そうなった時に各アニメーションがどのようなタイミングで動いたら

気持ちのよいアニメーションになるのでしょうか？

### 見せたいものと見せたくないものを分ける

動きに関して人の目線や感じ方は

その瞬間、一番目を引くものに集中します。

同時に同じ動きをした場合

目立っていないものに関しては埋もれます。

### 山をずらす

見せたい動きはその見せたい動きの山

この山とは動きが目立つ瞬間です。

```
- 急激に速度が変化する瞬間だったり

- 動き出す瞬間だったり

- 停止する瞬間だったり
```

など、変化がある瞬間のことですね。

それをずらしてあげてください。

見せたくない動きは

その山に合わせて控えめにアニメーションさせれば

いつの間にか表示されてました。みたいな形になります。

こんな感じ

```
/\	/\	/\
^	^	^
	^
```

### ストーリーを作る

山をずらしたら

その後は山と山の距離を考えましょう

等間隔でも良いですが

```
/\		/\	/\
^		^	^
		^
```

や

```
/\/\	/\
^ ^	^
  ^
```
でも良いですね

## 現場で使っているアニメーションプラグインについて（道具）

最後に自分が現場で使っているツールを紹介します。

### CSSでのアニメーション

こことかは良く使ってました。

[https://daneden.github.io/animate.css/](https://daneden.github.io/animate.css/ "https://daneden.github.io/animate.css/")

簡易的なアニメーションを作るのに最適ですね。

ただ実際案件になってくるとテンプレートの動きだけだとしんどくなってくるので

カスタマイズしちゃいますね。

特にcubic-bezierは細かい調整ができるので多様します。

[http://cubic-bezier.com/](http://cubic-bezier.com/ "http://cubic-bezier.com/")

このサイトで変化を決めてから

コードに落とし込んだりはしてます。

### JSでのアニメーション

昔から使ってるところで言うと

[http://velocityjs.org/](http://velocityjs.org/ "http://velocityjs.org/")

最近使って良かったと思ったところで言うと

[http://animejs.com/](http://animejs.com/ "http://animejs.com/")

良かった点はアニメーションを一つのタイムラインで考えられるところと

拡張に関して、用意されているもので不備はなかったということです。

以上になります。

ありがとうございます。