---
layout: post
title: SVGの扱い方① (書き出し方)
date: 2018-06-28 00:00:00 +0900
description: SVGの扱い方① (書き出し方)
img: thumbnail-180628.png
tags: [etc]
---
<style>
	* {
		word-break: break-all;
	}
</style>

## 前段として

SVGって...よくわからないけどなんとなく使っている

人も多いんじゃないでしょうか？

イラストレーターからの書き出し方からやりましょう。

## まず

書き出す前に知識として覚えてほしいのは

**svgはパスデータであること**です。

webにおいて様々な状況や用途で画像の形式は変わりますが

svgが向いているのはアイコンなどのシンプルな図形

です。くれぐれも写真などの画像をsvgで書き出さないでください。

## イラストレーターからの書き出し

### 1.イラストレーターからオブジェクト作成します。

![](../assets/img/svg/1.png)

### 2.小数点に関して

この青い縁の小さい四角がパスデータのポイントになります。

そこで上のX,Y,W,Hを見てください。

一部小数点になっている箇所があります。

これは書き出した時にぼやける原因となるので

小数点はなくしましょう。

私はX,Yは気にせず切り捨て、W,Hは小数点第一位を四捨五入してます。

![](../assets/img/svg/2.png)

### 3.アートボードによる書き出し

様々な書き出し方法はありますが

今回はアートボード化します。

右のツールから「アートボードツール」を選択しましょう。

ショートカットはShift + O

![](../assets/img/svg/3.png)

### 4.アートボード化

![](../assets/img/svg/4.png)

選択ツールとアートボードツールを切り替えながら行うと楽です。

まず、アートボードツールを選択している状態で

Commandを押してください。

そうするとマウスカーソルが矢印になります。

これはCommandを押している間は「選択ツール」になるので

Commandを押しながら（選択ツール）オブジェクトをクリックし

Commandを離して（アートボードツール）オブジェクトをクリック

を繰り返します。

### 5.アートボードごとに書き出し

アートボードに名前を付けても良いですが

今回は無名でいきます。

![](../assets/img/svg/5.png)

ファイル→書き出し→スクリーン用に書き出し

を選択してください。

### 6.書き出し設定

クリックすると下記の画面になります。

![](../assets/img/svg/6.png)

右側が設定になります。

書き出し先はちゃんと確認しておきましょう。

次に画像の形式です。

右下のフォーマットがPNGになっていますね。

「スクリーン用に書き出し」は各画像形式の設定を拡張子ごとに設定します。

iOS Android と書いてある文字の横の車輪のマークをクリックしてください。

そうすると形式ごとの設定画面になります。

![](../assets/img/svg/7.png)

### 7.svgの書き出し設定

svgをクリックしてください。

本日、伝えたい部分は主にここになります。

![](../assets/img/svg/8.png)

<div id="-"></div>

これがsvgの設定になります。

まず上から

#### スタイル
```
- インラインスタイル : タグに直接、属性で埋め込みます。
- 内部CSS : svgファイルのstyle属性でスタイルを設定します。
- プレゼンテーション属性 : 各タグのスタイルに紐づく属性でスタイルを設定します。
```
**内部CSS**で設定したほうが後々のスタイル変更時に便利ですね。

#### フォント
```
- アウトラインに変換 : アウトライン化されていない文字は自動的にアウトラン化されます。
- SVG : svgのテキストタグで文字を設定します。
```
フォントは基本的にアウトライン化してから書き出しの方が良いですが、忘れた時のためにも

**アウトラインに変換**で設定しときましょう。

#### 画像
```
- リンク : svg内部に画像があった場合、画像へのリンクを貼ることで画像を表示する。
- 埋め込む : base64で文字列変換した画像データを埋め込みます。
```
通常画像をsvgで書き出すことはありませんが、埋め込みを選択するとファイルサイズが大きくなってしまうので

一応**リンク**にしておきましょう。


#### オブジェクトID
```
- 最小 : idをつける際に、英語1文字(a)など最小の文字列で名前を付けてくれます。
- レイヤー名 : idをつける際に、レイヤー名で名前を付けてくれます。
- 固有 : idをつける際に、ランダムな文字列(9862d9f2-b1b6-422d-871b-8907879fda4d)など最小の文字列で名前を付けてくれます。
```

これは好みの問題なので、どれでも大丈夫です。

#### 小数点以下の桁数
```
- 1から
```
ここが一番重要な部分になります。

これは、小数点以下の桁数をどれだけ設けるかという設定です。

数字を上げるとより細かい数値でポイントが打たれますがファイルサイズは上がります。

数字を下げるとより単純な数値でポイントが打たれます。

初期値は2です。

ですがシンプルな図形の場合は1でも大丈夫です。

逆に複雑な図形の場合、2でも形が崩れてしまうので

図形に合わせて適切な小数点を選択しましょう。

#### 縮小

空のグループとスペース（空白）を削除して SVG のファイルサイズを最適化します。

このオプションを選択すると、SVG コードの読みやすさも低下します。

最初はコードを理解するためにも**チェックなし**でいきましょう。

#### レスポンシブ

チェックが入っている場合、svg自体にwidth,heightは指定しません。

入っていない場合、svg自体にwidth,heightを指定します。

このオプションをオンにすると、生成された SVG がブラウザー内で拡大・縮小します。絶対サイズの値は書き込まれません。

**チェックあり**にしましょう。

#### まとめると

上から

```
スタイル : 内部CSS
フォント : アウトラインに変換
画像 : リンク 
オブジェクトID : （何でも良い）
小数点以下の桁数 : 2（シンプルな図形は1,複雑な図形は3）
縮小 : チェックなし
レスポンシブ : チェックあり
```

が無難でしょう。

### 8.書き出し

後は右下のフォーマットでsvgを選択し

![](../assets/img/svg/9.png)

「アートボードを書き出し」をクリックして書き出します。

書き出しに関しては以上になります。

次回は設定の仕方を行います。

ありがとうございました。

